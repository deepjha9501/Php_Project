# AdminStudio Server Preparation Script for Windows Server 2022
# Author: Copilot for Az | Purpose: Install required roles/features for AdminStudio

# Ensure script runs with elevated privileges
if (-not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole(`
    [Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Warning "Please run this script as Administrator."
    exit
}




# Enable required Windows Features
$features = @(
    "NET-Framework-Features",       # .NET Framework 3.5 (includes 2.0)
    "NET-Framework-45-Features",    # .NET Framework 4.8
    "RSAT",                         # Remote Server Administration Tools
    "ServerManager-Core-RSAT",     # Server Manager RSAT tools
    "Web-Server",                   # IIS Web Server (optional for web-based cataloging)
    "Web-Mgmt-Console",             # IIS Management Console
    "MSMQ-Server",                  # Message Queuing (used by some packaging workflows)
    "WAS",                          # Windows Process Activation Service
    "WAS-ProcessModel",             # WAS Process Model
    "WAS-NetFxEnvironment",         # WAS .NET Environment
    "WAS-Config-APIs"               # WAS Configuration APIs
)
foreach ($feature in $features) {
    Write-Host "Installing feature: $feature"
    Install-WindowsFeature -Name $feature -IncludeManagementTools -ErrorAction SilentlyContinue
}

Write-Host "`nâœ… All required features installed. You may now proceed with AdminStudio installation."




Getting Started with App-V (Windows 10/11) - Microsoft Desktop Optimization Pack | Microsoft Learn


https://gitlab.rpsconsulting.in/


# Path to your MSI file
$msiFile = "C:\Users\aztra\Downloads\7z2501-x64.msi"

# Create Windows Installer COM object
$installer = New-Object -ComObject WindowsInstaller.Installer

# Open the MSI file database in read-only mode
$database = $installer.GetType().InvokeMember(
    "OpenDatabase", 
    'InvokeMethod', 
    $null, 
    $installer, 
    @($msiFile, 0) # 0 for read-only
)

# Prepare a query to get the ProductCode property
$query = "SELECT `Value` FROM `Property` WHERE `Property` = 'ProductCode'"

# Execute the query
$view = $database.GetType().InvokeMember(
    "OpenView",
    'InvokeMethod',
    $null,
    $database,
    ($query)
)

$view.GetType().InvokeMember("Execute", 'InvokeMethod', $null, $view, $null)

# Fetch the record
$record = $view.GetType().InvokeMember("Fetch", 'InvokeMethod', $null, $view, $null)

# The product code is in the first field of the record
$productCode = $record.GetType().InvokeMember("StringData", 'GetProperty', $null, $record, 1)
Write-Output "ProductCode of MSI: $productCode"





Install-WindowsFeature -Name Web-Server, Web-WebServer, Web-Common-Http, Web-Static-Content, Web-Default-Doc, Web-Dir-Browsing, Web-Http-Errors, Web-App-Dev, Web-Asp-Net, Web-Net-Ext, Web-ISAPI-Ext, Web-ISAPI-Filter, Web-Includes, Web-Security, Web-Filtering, Web-Basic-Auth, Web-Windows-Auth, Web-Performance, Web-Stat-Compression, Web-Mgmt-Tools, Web-Mgmt-Console, NET-Framework-Features, NET-Framework-Core, NET-Framework-45-Features, NET-WCF-Services45, NET-WCF-TCP-PortSharing45 -IncludeManagementTools


https://archive.org/download/msdop2015/mu_microsoft_desktop_optimization_pack_2015_x86_x64_dvd_5975282.iso

https://go.microsoft.com/fwlink/?linkid=2120254



https://notepad-plus-plus.org/downloads/



SELECT TOP (1000) 
       [ResourceID]
      ,[ResourceType]
      ,[ResourceID]
      ,[ResourceType]
      ,[ADDomain0]
      ,[ADSiteName0]
      ,[AgentName]
      ,[AMTFullVersion]
      ,[AMTStatus]
      ,[BuildExt]
      ,[BuildExt]
      ,[ClientType]
      ,[ClientVersion]
      ,[ClientType]
      ,[Client_Version0]
      ,[ClientType]
      ,[Client_Version0]
FROM [CM_HYD].[dbo].[v_R_System]


